name: Unit Tests

on:
  push:
    branches: [main]  # Run the tests on pushes to the 'main' branch
  pull_request:
    branches: [main]  # Run the tests on pull requests targeting the 'main' branch

jobs:
  frontend_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Run backend
        run: |
          cd backend
          nohup python -m uvicorn src.app:app --reload > backend.log 2>&1 &
          echo $! > backend.pid  # Save the process ID
      - name: Install npm Dependencies
        run: |
          cd frontend
          npm install
      - name: Wait for Backend to be Ready
        timeout-minutes: 2  # Add timeout to prevent infinite wait
        run: |
          while ! nc -z localhost 8000; do
            echo "Waiting for backend to be ready..."
            sleep 2
          done
      - name: Try backend request
        run: |
          curl -X POST http://localhost:8000/token \
          -F "username=username1" \
          -F "password=password"
      - name: Unit Test
        run: |
          cd frontend
          touch .env
          # Collect environment vars from repo vars
          echo "REACT_APP_BACKEND_URL=${{ vars.REACT_APP_BACKEND_URL }}" >> .env
          npm test
      - name: Cleanup backend
        if: always()  # Run this step even if previous steps fail
        run: |
          if [ -f backend/backend.pid ]; then
            kill $(cat backend/backend.pid)
          fi

  backend_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Python Tests
        run: |
          cd backend
          pytest --maxfail=0 --disable-warnings -q
